########################################################
# function to detect git directory and colorize the branch
#######################################################
function parse_git_branch()
{
if git rev-parse --git-dir >/dev/null 2>&1
then
    gitver="${COLOR_RED} (git::$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p'))${COLOR_DEF}"
else
       return 0
fi
echo -e $gitver
}
# NOTES
#######################################################
#  This goes export PS1="[\[${COLOR_GREEN}\]\u@\h\[${COLOR_DEFAULT}\] \W\$(parse_git_branch)]\\$ "
#  however it's causing me to not be able to backspace across the entire line of text for some reason.
#######################################################


#######################################################
# function to set PS1
#######################################################
function _ps1_prep() {
	## Load runtime variables

	# Get ssh-agent status
	# ssh-add -l 2>/dev/null >/dev/null
	# ps1_ssh=$?

	# Get sudo status
	# sudo -n /bin/true 2>/dev/null >/dev/null
	# ps1_sudo=$?

	## Assemble the prompt

    #######################################################
    # set the prompt
    #######################################################
    #export PS1="[\[${COLOR_GREEN}\]\u@\h\[${COLOR_DEFAULT}\] \W]\\$ "
    # export PS1="[\[${COLOR_GREEN}\]\u@\h\[${COLOR_DEFAULT}\] \W\$(parse_git_branch)]\\$ "

	# Opening bracket
	PS1="["

	# set color by host - gertrude green, all else yellow
	if [ "$HOSTNAME" = "lois.local" ];
	then
	    PS1=${PS1}${COLOR_ONG}"\u@\h "${COLOR_DEF}
    else
        PS1=${PS1}${COLOR_ONG}"\u@\h "${COLOR_DEF}
    fi

	# Working directory
	PS1=${PS1}"\W"

	# if you're in a git working directory, show the branch
    PS1=${PS1}`parse_git_branch`;

	# Closing bracket
	PS1=${PS1}"]\$"

	# Trailing space
	PS1=${PS1}" "

	## Exit

	# Return cleanly
	return 0

	}

# :mode=shellscript:
